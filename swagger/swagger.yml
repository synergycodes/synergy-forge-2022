openapi: 3.0.3
info:
  title: Swagger REST API - OpenAPI 3.0
  description: |-
    This is anAPI for Company Integration Service

  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:3333/api
tags:
  - name: Integrations
    description: Integration event. Integration can have multiple Versions.

  - name: Versions
    description: A single version of the integration - with budget and number of participants. Each version may be different within same integration.

  - name: Categories
    description: Grouping category for the expense. Each category can have multiple expenses.

  - name: CategoryItems
    description: Single expense (with value) within a Category and Version.


paths:
  /integrations:
    get:
      tags:
        - Integrations
      summary: Get all integrations
      description: Gets all available integrations
      operationId: findAll

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Integration'
    post:
      tags:
        - Integrations
      summary: Create new integration
      description: Update an existing integration by Id
      operationId: create
      requestBody:
        description: Create new integration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Integration'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'

  /integrations/{integrationId}:
    get:
      tags:
        - Integrations
      parameters:
        - name: integrationId
          in: path
          description: ID of integration to return
          required: true
          schema:
            type: number
      summary: Finds integration by ID
      operationId: findOne
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Integration'
        '400':
          description: Invalid integration value

    patch:
      tags:
        - Integrations
      summary: Updates an Integration
      description: update integration
      operationId: update
      parameters:
        - name: integrationId
          in: path
          description: ID of integration to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Integration'
        '400':
          description: Invalid integration value

    delete:
      tags:
        - Integrations
      summary: Deletes an Integration
      description: delete an integration
      operationId: delete
      parameters:
        - name: integrationId
          in: path
          description: ID of integration to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Removed successfully
        '400':
          description: Remove error

  /integrations/{integrationId}/full:
    get:
      tags:
        - Integrations
      parameters:
        - name: integrationId
          in: path
          description: ID of integration to return
          required: true
          schema:
            type: number
      summary: Finds full integration by ID
      description: Finds integration by id and returns entire object with related variations, categories and category items
      operationId: findFull
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Integration'
        '400':
          description: Invalid integration value

  /versions:
    get:
      tags:
        - Versions
      summary: Get all versions
      description: Gets all available integrations
      operationId: findAll

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Version'
    post:
      tags:
        - Versions
      summary: Create new version
      description: Create a new version for the integration
      operationId: create
      requestBody:
        description: Create new version
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Version'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'

  /versions/{versionId}:
    get:
      tags:
        - Versions
      parameters:
        - name: versionId
          in: path
          description: ID of version to return
          required: true
          schema:
            type: number
      summary: Finds version by ID
      operationId: findOne
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Version'
        '400':
          description: Invalid version value

    patch:
      tags:
        - Versions
      summary: Updates a Version
      description: update version
      operationId: update
      parameters:
        - name: versionId
          in: path
          description: ID of version to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Version'
        '400':
          description: Invalid integration value

    delete:
      tags:
        - Versions
      summary: Deletes a Version
      description: delete a version
      operationId: delete
      parameters:
        - name: versionId
          in: path
          description: ID of version to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Removed successfully
        '400':
          description: Remove error

  /versions/{versionId}/duplicate:
    post:
      tags:
        - Versions
      parameters:
        - name: versionId
          in: path
          description: ID of version to duplicate
          required: true
          schema:
            type: number
      summary: Duplicates the given version, including category items
      operationId: duplicate
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Version'
        '400':
          description: Duplicate error

  /categories:
    get:
      tags:
        - Categories
      summary: Get all categories
      description: Gets all available categories
      operationId: findAll

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - Categories
      summary: Create new category
      description: Create a new category
      operationId: create
      requestBody:
        description: Create new category
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

  /categories/{categoryId}:
    get:
      tags:
        - Categories
      parameters:
        - name: categoryId
          in: path
          description: ID of category to return
          required: true
          schema:
            type: number
      summary: Finds category by ID
      operationId: findOne
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: Invalid version value

    patch:
      tags:
        - Categories
      summary: Updates a Category
      description: update category
      operationId: update
      parameters:
        - name: categoryId
          in: path
          description: ID of category to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: Invalid category value

    delete:
      tags:
        - Categories
      summary: Deletes a Category
      description: delete a category
      operationId: delete
      parameters:
        - name: categoryId
          in: path
          description: ID of category to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Removed successfully
        '400':
          description: Remove error

  /category-items:
    get:
      tags:
        - CategoryItems
      summary: Get all categories
      description: Gets all available categories
      operationId: findAll

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryItem'
    post:
      tags:
        - CategoryItems
      summary: Create new category
      description: Create new CategoryItem
      operationId: create
      requestBody:
        description: Create new CategoryItem
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryItem'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryItem'

  /category-items/{categoryItemId}:
    get:
      tags:
        - CategoryItems
      parameters:
        - name: categoryItemId
          in: path
          description: ID of CategoryItem to return
          required: true
          schema:
            type: number
      summary: Finds CategoryItem by ID
      operationId: findOne
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryItem'
        '400':
          description: Invalid version value

    patch:
      tags:
        - CategoryItems
      summary: Updates a CategoryItem
      description: update CategoryItem
      operationId: update
      parameters:
        - name: categoryItemId
          in: path
          description: ID of CategoryItem to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryItem'
        '400':
          description: Invalid category value

    delete:
      tags:
        - CategoryItems
      summary: Deletes a CategoryItem
      description: delete a CategoryItem
      operationId: delete
      parameters:
        - name: categoryItemId
          in: path
          description: ID of CategoryItem to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Removed successfully
        '400':
          description: Remove error

components:
  schemas:
    Integration:
      type: object
      properties:
        id:
          type: number
          example: 10
        name:
          type: string
          example: 2022

        budget:
          type: number
          example: 10000

        participants:
          type: number
          example: 40

        picture:
          type: string
          example: https://synergycodes.com/wp-content/uploads/logo.svg

        dateStart:
          type: string
          format: date-time
          example: 2020-09-25T15:00:00.000Z

        dateEnd:
          type: string
          format: date-time
          example: 2020-09-26T12:00:00.000Z

    Version:
      type: object
      properties:
        id:
          type: number
          example: 10
        name:
          type: string
          example: 2022
        integrationId:
          type: number
          example: 10
        isFinal:
          type: boolean
          example: true

    Category:
      type: object
      properties:
        id:
          type: number
          example: 10
        name:
          type: string
          example: 2022
        integrationId:
          type: number
          example: 10

    CategoryItem:
      type: object
      properties:
        id:
          type: number
          example: 10
        name:
          type: string
          example: 2022
        versionId:
          type: number
          example: 10
        categoryId:
          type: number
          example: 10
        cost:
          type: number
          example: 200
        perParticipant:
          type: boolean
          example: false
